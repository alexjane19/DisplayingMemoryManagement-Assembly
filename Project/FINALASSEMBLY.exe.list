EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
FINALASSEMBLY.exe -- emu8086 assembler version: 4.03  
 
[ 2/6/2015  --  4:23:07 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       stack   segment para stack 'STACK'
[   2]    0000: 00 00 00 00 00 00 00 00 00 00 00 00   db      512 dup(?)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00             
[   3]        :                                       stack   ends
[   4]        :                                       
[   5]        :                                       VGA_VIDEO_SEGMENT       	equ     0a000h  	;VGA display memory segment
[   6]        :                                       SCREEN_WIDTH_IN_BYTES   	equ     044ah   	;offset of BIOS variable
[   7]        :                                       FONT_CHARACTER_SIZE     	equ     14      	;# bytes in each font char
[   8]        :                                       ;
[   9]        :                                       ; VGA register equates.
[  10]        :                                       ;
[  11]        :                                       SC_INDEX        		equ     3c4h    	;SC index register
[  12]        :                                       SC_MAP_MASK     		equ     2       	;SC map mask register index
[  13]        :                                       GC_INDEX        		equ     3ceh    	;GC index register
[  14]        :                                       GC_SET_RESET    		equ     0       	;GC set/reset register index
[  15]        :                                       GC_ENABLE_SET_RESET 	equ 	1       	;GC enable set/reset register index
[  16]        :                                       GC_ROTATE       		equ     3       	;GC data rotate/logical function
[  17]        :                                       	       	; register index
[  18]        :                                       GC_MODE         		equ     5       	;GC Mode register
[  19]        :                                       GC_BIT_MASK     		equ     8       	;GC bit mask register index
[  20]        :                                       ;
[  21]        :                                       
[  22]        :                                       data segment para common 'DATA'
[  23]        :                                       ; add your data here!
[  24]        :                                       ;---------varibale for font-----------
[  25]        :                                       
[  26]    0200: 19 00                                 TEST_TEXT_ROW   		DW     25      	;row to display test text at
[  27]    0202: 30 00                                 TEST_TEXT_COL   		DW     48      	;column to display test text at
[  28]    0204: 0F                                    TEST_TEXT_COLOR 		DB     0fh     	;high intensity white
[  29]    0205:                                       TestString      label   byte
[  30]    0205: 57 37 00                              db      57H,37H,0         	;test string to print.
[  31]    0208: 00 00 00 00                           FontPointer     dd      ?
[  32]        :                                       
[  33]        :                                       ;-----------END---varibale for font-----------------------
[  34]        :                                       
[  35]        :                                       
[  36]    020C: 14 00                                 SPOINT DW 20
[  37]    020E: 00 00                                 EPOINT DW ?
[  38]    0210: 00 00                                 PMEM DW ?    ;size of page with pixel
[  39]    0212: 00                                    SPAGE DB ?   ;real size of page
[  40]        :                                       
[  41]    0213: 31 2E 53 48 4F 57 20 4D 45 4D 4F 52   MENU1 DB '1.SHOW MEMORY','$'
                59 24                               
[  42]    0221: 0A 0D 32 2E 49 4E 50 55 54 20 4E 45   MENU2 DB 0AH,0DH,'2.INPUT NEW PROGRAM','$'
                57 20 50 52 4F 47 52 41 4D 24       
[  43]    0237: 0A 0D 33 2E 43 41 4C 43 55 4C 41 54   MENU3 DB 0AH,0DH,'3.CALCULATION HIT RATE','$'
                49 4F 4E 20 48 49 54 20 52 41 54 45 
                24                                  
[  44]    0250: 0A 0D 34 2E 45 4E 44 20 54 41 53 4B   MENU4 DB 0AH,0DH,'4.END TASK','$'
                24                                  
[  45]    025D: 0A 0D 35 2E 53 48 4F 57 20 50 52 4F   MENU5 DB 0AH,0DH,'5.SHOW PROGRAMS IN VIRTUAL MEMORY','$'
                47 52 41 4D 53 20 49 4E 20 56 49 52 
                54 55 41 4C 20 4D 45 4D 4F 52 59 24 
                                                    
[  46]    0281: 0A 0D 36 2E 45 58 49 54 24            MENU6 DB 0AH,0DH,'6.EXIT','$'
[  47]    028A: 0A 0D 31 2E 52 61 6E 64 6F 6D 24      MENU31 DB 0AH,0DH,'1.Random','$'
[  48]    0295: 0A 0D 32 2E 4F 70 74 69 6F 6E 61 6C   MENU32 DB 0AH,0DH,'2.Optional','$'
                24                                  
[  49]    02A2: 45 6E 74 65 72 20 53 69 7A 65 20 4D   MSG1 DB 'Enter Size Memory:','$'
                65 6D 6F 72 79 3A 24                
[  50]    02B5: 0A 0D 45 6E 74 65 72 20 53 69 7A 65   MSG2 DB 0AH,0DH,'Enter Size Page:','$'
                20 50 61 67 65 3A 24                
[  51]    02C8: 0A 0D 45 6E 74 65 72 20 61 20 4E 61   MSG3 DB 0AH,0DH,'Enter a Name Program:','$'
                6D 65 20 50 72 6F 67 72 61 6D 3A 24 
                                                    
[  52]    02E0: 0A 0D 45 6E 74 65 72 20 53 69 7A 65   MSG4 DB 0AH,0DH,'Enter Size of Program:','$'
                20 6F 66 20 50 72 6F 67 72 61 6D 3A 
                24                                  
[  53]    02F9: 0A 0D 46 6F 72 20 62 61 63 6B 20 6D   MSG5 DB 0AH,0DH,'For back main menu(N) or Contine to input new porgram(Y)','$'
                61 69 6E 20 6D 65 6E 75 28 4E 29 20 
                6F 72 20 43 6F 6E 74 69 6E 65 20 74 
                6F 20 69 6E 70 75 74 20 6E 65 77 20 
                70 6F 72 67 72 61 6D 28 59 29 24    
[  54]    0334: 48 69 74 20 52 61 74 65 3A 0A 0D 24   MSGHRATE DB 'Hit Rate:',0AH,0DH,'$'
                                                    
[  55]    0340: 45 6E 64 20 54 61 73 6B 20 4D 65 6E   MSGETASK DB 'End Task Menu:','$'
                75 3A 24                            
[  56]    034F: 4E 65 77 20 50 72 6F 67 72 61 6D 20   MSGNPROG DB 'New Program Menu:','$'
                4D 65 6E 75 3A 24                   
[  57]    0361: 50 72 6F 67 72 61 6D 73 20 49 6E 20   MSGSPROG DB 'Programs In Virtual Memory:',0AH,0DH,'$'
                56 69 72 74 75 61 6C 20 4D 65 6D 6F 
                72 79 3A 0A 0D 24                   
[  58]    037F: 50 72 6F 67 72 61 6D 73 20 49 6E 20   MSGPMEM  DB 'Programs In Memory:',0AH,0DH,'$'
                4D 65 6D 6F 72 79 3A 0A 0D 24       
[  59]    0395: 0A 0D 45 6E 74 65 72 20 4E 61 6D 65   MSGPAGEOPT DB 0AH,0DH,'Enter Name of a Program:','$'
                20 6F 66 20 61 20 50 72 6F 67 72 61 
                6D 3A 24                            
[  60]    03B0: 41 6C 6C 6F 63 61 74 69 6E 67 24      ALLOCATING DB 'Allocating','$'
[  61]        :                                       
[  62]        :                                       
[  63]    03BB:                                       SIZEMEMORY LABEL BYTE
[  64]    03BB: 14                                    MAXLEN1 DB 20
[  65]    03BC: 00                                    ACTELN1 DB ?
[  66]    03BD: 20 20 20 20 20 20 20 20 20 20 20 20   KBDATA1 DB 20 DUP(' ')
                20 20 20 20 20 20 20 20             
[  67]        :                                       
[  68]    03D1:                                       NPROGRAM LABEL BYTE
[  69]    03D1: 14                                    MAXLEN DB 20
[  70]    03D2: 00                                    ACTELN DB ?
[  71]    03D3: 20 20 20 20 20 20 20 20 20 20 20 20   KBDATA DB 20 DUP(' ')
                20 20 20 20 20 20 20 20             
[  72]        :                                       
[  73]    03E7:                                       NAMEPROG LABEL BYTE
[  74]    03E7: 14                                    NPMAXLEN DB 20
[  75]    03E8: 00                                    NPACTELN DB ?
[  76]    03E9: 00 00 00 00 00 00 00 00 00 00 00 00   NPKBDATA DB 20 DUP(?)
                00 00 00 00 00 00 00 00             
[  77]        :                                       
[  78]    03FD:                                       SIZEPROG LABEL BYTE
[  79]    03FD: 14                                    SPMAXLEN DB 20
[  80]    03FE: 00                                    SPACTELN DB ?
[  81]    03FF: 00 00 00 00 00 00 00 00 00 00 00 00   SPKBDATA DB 20 DUP(?)
                00 00 00 00 00 00 00 00             
[  82]        :                                       
[  83]        :                                       
[  84]    0413:                                       TEMPWORD LABEL BYTE
[  85]    0413: 14                                    MAXLENTEMP DB 20
[  86]    0414: 00                                    ACTELNTEMP DB ?
[  87]    0415: 20 20 20 20 20 20 20 20 20 20 20 20   KBDATATEMP DB 20 DUP(' ')
                20 20 20 20 20 20 20 20             
[  88]        :                                       
[  89]    0429: 00                                    SIZEMEM DB ? ;real size of memory
[  90]        :                                       
[  91]    042A: 00                                    NUMPAGEMEM DB ?
[  92]        :                                       
[  93]    042B: 00 00                                 STARTLPR DW ?
[  94]    042D: 00 00                                 ENDLPR DW ?
[  95]    042F: 00 00 00 00 00 00 00 00 00 00 00 00   LISTPROGRAM DB 40 DUP(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00                         
[  96]        :                                       
[  97]    0457: 00 00                                 STARTLPA DW ?
[  98]    0459: 00 00                                 ENDLPA DW ?
[  99]    045B: 00 00 00 00 00 00 00 00 00 00 00 00   LISTPAGE DB 100 DUP(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00                         
[ 100]    04BF: 00                                    NUMPAGEVIRTU DB 00
[ 101]        :                                       
[ 102]    04C0: 00 00 00 00 00 00 00 00 00 00 00 00   OFFSETPAGE DW 40 DUP(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00             
[ 103]    0510: 00 00 00 00 00 00 00 00 00 00 00 00   NUMOFPAGEP DB 40 DUP(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00                         
[ 104]    0538: 00                                    NUMOFPROG DB 0H
[ 105]    0539: 00 00                                 STARTLISTPAGE DW ?
[ 106]    053B: 00                                    NUMPAGEV DB ?
[ 107]    053C: 00 00                                 DIT DW ?
[ 108]    053E: 00 00                                 SIT DW ?
[ 109]    0540: 00 00                                 CXT DW ?
[ 110]    0542: 00 00                                 DIX DW ?
[ 111]        :                                       
[ 112]    0544: 00 00 00 00 00 00 00 00 00 00 00 00   HITRATE DB 100 DUP(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00                         
[ 113]    05A8: 00 00 00 00                           ASC_NUM    DB  4 DUP(0)
[ 114]        :                                       
[ 115]    05AC: 00 00                                 PTRLM DW ?
[ 116]    05AE: 00 00                                 STARTLM DW ?
[ 117]    05B0: 00 00                                 ENDLM DW ?
[ 118]    05B2: 00 00 00 00 00 00 00 00 00 00 00 00   LISTMEMORY DB 50 DUP(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00                               
[ 119]        :                                       
[ 120]    05E4: 00                                    RANDNUM DB ?
[ 121]    05E5: 00                                    DIVRANDM DB ?
[ 122]        :                                       
[ 123]    05E6: 00                                    AVAILBPAGE DB 0
[ 124]        :                                       
[ 125]    05E7: 00 00                                 COUNTENDLIST DW ?
[ 126]        :                                       
[ 127]    05E9: 00 00                                 STARTLIST DW ?
[ 128]    05EB: 00 00                                 ENDLIST   DW ?
[ 129]        :                                       
[ 130]        :                                       ends
[ 131]        :                                       
[ 132]        :                                       code segment
[ 133]        :                                       assume cs:code,ds:data,ss:stack
[ 134]        :                                       
[ 135]    05F0:                                       MAIN PROC FAR
[ 136]        :                                       ; set segment registers:
[ 137]    05F0: B8 20 00                              MOV AX, DATA
[ 138]    05F3: 8E D8                                 MOV DS, AX
[ 139]        :                                       
[ 140]        :                                       
[ 141]        :                                       ;	-----------------------------
[ 142]    05F5: C7 06 2B 02 2F 02                     MOV STARTLPR,OFFSET LISTPROGRAM
[ 143]    05FB: C7 06 57 02 5B 02                     MOV STARTLPA,OFFSET LISTPAGE
[ 144]    0601: C7 06 AE 03 B2 03                     MOV STARTLM,OFFSET LISTMEMORY
[ 145]    0607: A1 2B 02                              MOV AX,STARTLPR
[ 146]    060A: A3 2D 02                              MOV ENDLPR,AX
[ 147]    060D: A1 57 02                              MOV AX,STARTLPA
[ 148]    0610: A3 59 02                              MOV ENDLPA,AX
[ 149]    0613: A1 AE 03                              MOV AX,STARTLM
[ 150]    0616: A3 AC 03                              MOV PTRLM,AX
[ 151]        :                                       
[ 152]    0619: E8 E8 04                              CALL SETSIZEMEMPAGE
[ 153]    061C: E8 81 07                              CALL CLRSCR
[ 154]        :                                       
[ 155]        :                                       
[ 156]    061F:                                       STARTPRG:
[ 157]    061F: BA B0 01                              LEA DX,ALLOCATING
[ 158]    0622: B4 09                                 MOV AH,09H
[ 159]    0624: CD 21                                 INT 21H
[ 160]        :                                       
[ 161]    0626:                                       STARTPRG1:
[ 162]    0626: B9 00 00                              MOV CX,00
[ 163]    0629: 8A 0E 38 03                           MOV CL,NUMOFPROG
[ 164]    062D: BE C0 02                              LEA SI,OFFSETPAGE
[ 165]    0630: BF 10 03                              LEA DI,NUMOFPAGEP
[ 166]        :                                       
[ 167]        :                                       
[ 168]        :                                       
[ 169]        :                                       
[ 170]    0633: 83 F9 00                              CMP CX,0
[ 171]    0636: 74 50                                 JZ NOTREPETE
[ 172]    0638:                                       REPET:
[ 173]        :                                       
[ 174]        :                                       
[ 175]    0638: 8A 05                                 MOV AL,[DI]
[ 176]    063A: A2 3B 03                              MOV NUMPAGEV,AL
[ 177]    063D: B8 00 00                              MOV AX,00
[ 178]    0640: 8B 04                                 MOV AX,[SI]
[ 179]    0642: A3 39 03                              MOV STARTLISTPAGE,AX
[ 180]    0645: 89 36 3E 03                           MOV SIT,SI
[ 181]    0649: 89 3E 3C 03                           MOV DIT,DI
[ 182]    064D: 89 0E 40 03                           MOV CXT,CX
[ 183]        :                                       
[ 184]    0651: E8 69 03                              CALL ALLOCMEMPAGE
[ 185]        :                                       
[ 186]    0654: B4 01                                 MOV AH,01H
[ 187]    0656: CD 16                                 INT 16H
[ 188]    0658: 75 2E                                 JNZ NOTREPETE
[ 189]        :                                       
[ 190]    065A: B2 2E                                 MOV DL,2EH
[ 191]    065C: B4 02                                 MOV AH,02
[ 192]    065E: CD 21                                 INT 21H
[ 193]    0660: BB FF 09                              MOV BX,09FFH
[ 194]    0663: B9 00 00                              AGAIN1:MOV CX,0
[ 195]    0666: E2 FE                                 AGAIN: LOOP AGAIN
[ 196]    0668: 4B                                    DEC BX
[ 197]    0669: 75 F8                                 JNZ AGAIN1
[ 198]    066B: 8B 36 3E 03                           MOV SI,SIT
[ 199]    066F: 8B 3E 3C 03                           MOV DI,DIT
[ 200]    0673: 8B 0E 40 03                           MOV CX,CXT
[ 201]    0677: 83 C6 02                              ADD SI,2
[ 202]    067A: 83 C7 02                              ADD DI,2
[ 203]    067D: 49                                    DEC CX
[ 204]        :                                       
[ 205]    067E: 83 F9 00                              CMP CX,0
[ 206]    0681: 7F B5                                 JG REPET
[ 207]    0683: 83 F9 00                              CMP CX,0
[ 208]    0686: 74 9E                                 JE STARTPRG1
[ 209]        :                                       
[ 210]    0688:                                       NOTREPETE:
[ 211]        :                                       
[ 212]    0688: E8 0F 02                              CALL LOCATEPAGE
[ 213]        :                                       
[ 214]        :                                       
[ 215]    068B: BA 13 00                              LEA DX,MENU1
[ 216]    068E: B4 09                                 MOV AH,09H
[ 217]    0690: CD 21                                 INT 21H
[ 218]        :                                       
[ 219]    0692: BA 21 00                              LEA DX,MENU2
[ 220]    0695: B4 09                                 MOV AH,09H
[ 221]    0697: CD 21                                 INT 21H
[ 222]        :                                       
[ 223]    0699: BA 37 00                              LEA DX,MENU3
[ 224]    069C: B4 09                                 MOV AH,09H
[ 225]    069E: CD 21                                 INT 21H
[ 226]        :                                       
[ 227]    06A0: BA 50 00                              LEA DX,MENU4
[ 228]    06A3: B4 09                                 MOV AH,09H
[ 229]    06A5: CD 21                                 INT 21H
[ 230]        :                                       
[ 231]    06A7: BA 5D 00                              LEA DX,MENU5
[ 232]    06AA: B4 09                                 MOV AH,09H
[ 233]    06AC: CD 21                                 INT 21H
[ 234]        :                                       
[ 235]    06AE: BA 81 00                              LEA DX,MENU6
[ 236]    06B1: B4 09                                 MOV AH,09H
[ 237]    06B3: CD 21                                 INT 21H
[ 238]        :                                       
[ 239]    06B5: B4 0C                                 MOV AH,0CH
[ 240]    06B7: B0 07                                 MOV AL,7H
[ 241]    06B9: CD 21                                 INT 21H
[ 242]        :                                       
[ 243]        :                                       ;MOV AH,7H
[ 244]        :                                       ; INT 21H
[ 245]        :                                       
[ 246]    06BB: 3C 31                                 CMP AL,31H
[ 247]    06BD: 75 05                                 JNE MEN2
[ 248]    06BF: E8 D8 01                              CALL LOCATEPAGE
[ 249]    06C2: B0 00                                 MOV AL,00
[ 250]        :                                       
[ 251]    06C4:                                       MEN2:
[ 252]        :                                       
[ 253]    06C4: 3C 32                                 CMP AL,32H
[ 254]    06C6: 75 05                                 JNE MEN3
[ 255]    06C8: E8 D3 05                              CALL SETPROGRAM
[ 256]    06CB: B0 00                                 MOV AL,00
[ 257]        :                                       
[ 258]    06CD:                                       MEN3:
[ 259]        :                                       
[ 260]        :                                       
[ 261]    06CD: 3C 33                                 CMP AL,33H
[ 262]    06CF: 75 05                                 JNE MEN4
[ 263]    06D1: E8 5A 00                              CALL CALCHITRATE
[ 264]    06D4: B0 00                                 MOV AL,00
[ 265]        :                                       
[ 266]        :                                       
[ 267]    06D6:                                       MEN4:
[ 268]        :                                       
[ 269]        :                                       
[ 270]    06D6: 3C 34                                 CMP AL,34H
[ 271]    06D8: 75 34                                 JNE MEN5
[ 272]    06DA: E8 C3 06                              CALL CLRSCR
[ 273]    06DD: BA 40 01                              LEA DX,MSGETASK
[ 274]    06E0: B4 09                                 MOV AH,09H
[ 275]    06E2: CD 21                                 INT 21H
[ 276]    06E4: BA 8A 00                              LEA DX,MENU31
[ 277]    06E7: B4 09                                 MOV AH,09H
[ 278]    06E9: CD 21                                 INT 21H
[ 279]    06EB: BA 95 00                              LEA DX,MENU32
[ 280]    06EE: B4 09                                 MOV AH,09H
[ 281]    06F0: CD 21                                 INT 21H
[ 282]        :                                       
[ 283]    06F2: B4 07                                 MOV AH,7H
[ 284]    06F4: CD 21                                 INT 21H
[ 285]        :                                       
[ 286]    06F6: 3C 31                                 CMP AL,31H
[ 287]    06F8: 75 08                                 JNE MEN42
[ 288]    06FA: E8 01 02                              CALL FREEMEMPAGE
[ 289]    06FD: E8 9A 01                              CALL LOCATEPAGE
[ 290]    0700: B0 00                                 MOV AL,00
[ 291]        :                                       
[ 292]    0702:                                       MEN42:
[ 293]    0702: 3C 32                                 CMP AL,32H
[ 294]    0704: 75 08                                 JNE MEN5
[ 295]    0706: E8 48 02                              CALL FREEMEMPAGEOPTIC
[ 296]    0709: E8 8E 01                              CALL LOCATEPAGE
[ 297]    070C: B0 00                                 MOV AL,00
[ 298]        :                                       
[ 299]        :                                       
[ 300]    070E:                                       MEN5:
[ 301]        :                                       
[ 302]        :                                       
[ 303]        :                                       
[ 304]    070E: 3C 35                                 CMP AL,35H ;SHOW PROGRAMS IN VIRTUAL MEMORY
[ 305]    0710: 75 03                                 JNE MEN6
[ 306]    0712: E8 D8 00                              CALL SHOWPROGRAM
[ 307]        :                                       
[ 308]    0715:                                       MEN6:
[ 309]        :                                       
[ 310]    0715: 3C 36                                 CMP AL,36H
[ 311]    0717: 75 05                                 JNE ENDMEN
[ 312]    0719: B8 00 4C                              mov ax, 4c00h ; exit to operating system.
[ 313]    071C: CD 21                                 int 21h
[ 314]    071E:                                       ENDMEN:
[ 315]        :                                       
[ 316]        :                                       
[ 317]        :                                       
[ 318]    071E: B4 01                                 mov     ah,1
[ 319]    0720: CD 21                                 int     21h     		;wait for a key
[ 320]    0722: B8 03 00                              mov     ax,3
[ 321]    0725: CD 10                                 int     10h
[ 322]    0727: B4 0C                                 MOV AH,0CH
[ 323]    0729: CD 21                                 INT 21H
[ 324]    072B: E9 F1 FE                              JMP STARTPRG
[ 325]        :                                       ;CALL DRAWMEMORY
[ 326]        :                                       
[ 327]        :                                       ;CALL CLEARMENU
[ 328]        :                                       ;CALL SETPROGRAM
[ 329]        :                                       ;CALL SETPROGRAM
[ 330]        :                                       
[ 331]        :                                       ;CALL ALLOCMEMPAGE
[ 332]        :                                       ; CALL ALLOCMEMPAGE
[ 333]        :                                       ; ;CALL ALLOCMEMPAGE
[ 334]        :                                       ; CALL ALLOCMEMPAGE
[ 335]        :                                       ; CALL FREEMEMPAGE
[ 336]        :                                       ; CALL FREEMEMPAGE
[ 337]        :                                       ; CALL ALLOCMEMPAGE
[ 338]        :                                       ;CALL DRAWMEMORY
[ 339]        :                                       ;  CALL LOCATEPAGE
[ 340]        :                                       ; wait for any key....
[ 341]        :                                       
[ 342]        :                                       MAIN ENDP
[ 343]        :                                       CODE ENDS
[ 344]        :                                       
[ 345]    072E:                                       CALCHITRATE PROC NEAR
[ 346]    072E: E8 6F 06                              CALL CLRSCR
[ 347]    0731: BA 34 01                              LEA DX,MSGHRATE
[ 348]    0734: B4 09                                 MOV AH,09H
[ 349]    0736: CD 21                                 INT 21H
[ 350]        :                                       
[ 351]    0738: BF 44 03                              LEA DI,HITRATE
[ 352]    073B:                                       NEXTWORD11:
[ 353]        :                                       
[ 354]    073B: 8A 1D                                 MOV BL,[DI]
[ 355]    073D: 80 FB 00                              CMP BL,0000
[ 356]    0740: 75 03 E9 9E 00                        JE NEXTLETER1
[ 357]    0745:                                       PRTSTR11:
[ 358]        :                                       
[ 359]    0745: 8A D3                                 MOV DL,BL
[ 360]    0747: B4 02                                 MOV AH,02
[ 361]    0749: CD 21                                 INT 21H
[ 362]    074B: 47                                    INC DI
[ 363]    074C: 8A 1D                                 MOV BL,[DI]
[ 364]    074E: 80 FB 40                              CMP BL,40H
[ 365]    0751: 7D F2                                 JGE PRTSTR11
[ 366]        :                                       
[ 367]    0753: 8A D3                                 MOV DL,BL
[ 368]    0755: B4 02                                 MOV AH,02
[ 369]    0757: CD 21                                 INT 21H
[ 370]        :                                       
[ 371]    0759: B2 3A                                 MOV DL,3AH
[ 372]    075B: B4 02                                 MOV AH,02
[ 373]    075D: CD 21                                 INT 21H
[ 374]        :                                       
[ 375]        :                                       
[ 376]    075F: 47                                    INC DI
[ 377]    0760: B8 00 00                              MOV AX,0
[ 378]    0763: 8A 1D                                 MOV BL,[DI]
[ 379]    0765: B9 0A 00                              MOV CX,10     ;3-Move 10 to CX
[ 380]    0768: BE A8 03                              LEA SI,ASC_NUM ;4- SI=Offset ASC_NUM
[ 381]    076B: 83 C6 02                              ADD SI,2      ;5-SI point to last ascii
[ 382]    076E: 8A C3                                 MOV AL,BL ;6-Move  124BH to AX
[ 383]    0770: BA 00 00                              BACK11:    MOV DX,0      ;7-Move 0 to DX
[ 384]    0773: F7 F1                                 DIV CX        ;8-Divide DX:AX to 10
[ 385]    0775: 80 CA 30                              OR DL,30H     ;9-Make remainder ascii
[ 386]    0778: 88 14                                 MOV [SI],DL   ;10-Put ascii in ASC_NUM
[ 387]    077A: 4E                                    DEC SI        ;11-SI point to next ascii
[ 388]    077B: 3D 00 00                              CMP AX,0      ;12-If AX>0 go
[ 389]    077E: 77 F0                                 JA BACK11
[ 390]        :                                       
[ 391]        :                                       
[ 392]    0780:                                       CHOP:
[ 393]    0780: 8A 14                                 MOV DL,[SI]
[ 394]    0782: B4 02                                 MOV AH,02
[ 395]    0784: CD 21                                 INT 21H
[ 396]    0786: 46                                    INC SI
[ 397]    0787: 80 3C 00                              CMP [SI],0
[ 398]    078A: 75 F4                                 JNE CHOP
[ 399]        :                                       
[ 400]    078C: B2 2F                                 MOV DL,2FH
[ 401]    078E: B4 02                                 MOV AH,02
[ 402]    0790: CD 21                                 INT 21H
[ 403]        :                                       
[ 404]        :                                       
[ 405]    0792: 47                                    INC DI
[ 406]    0793: B8 00 00                              MOV AX,00
[ 407]    0796: 8A 1D                                 MOV BL,[DI]
[ 408]    0798: B9 0A 00                              MOV CX,10     ;3-Move 10 to CX
[ 409]    079B: BE A8 03                              LEA SI,ASC_NUM ;4- SI=Offset ASC_NUM
[ 410]    079E: 83 C6 02                              ADD SI,2      ;5-SI point to last ascii
[ 411]    07A1: 8A C3                                 MOV AL,BL ;6-Move  124BH to AX
[ 412]    07A3: BA 00 00                              BACK12:    MOV DX,0      ;7-Move 0 to DX
[ 413]    07A6: F7 F1                                 DIV CX        ;8-Divide DX:AX to 10
[ 414]    07A8: 80 CA 30                              OR DL,30H     ;9-Make remainder ascii
[ 415]    07AB: 88 14                                 MOV [SI],DL   ;10-Put ascii in ASC_NUM
[ 416]    07AD: 4E                                    DEC SI        ;11-SI point to next ascii
[ 417]    07AE: 3D 00 00                              CMP AX,0      ;12-If AX>0 go
[ 418]    07B1: 77 F0                                 JA BACK12
[ 419]        :                                       
[ 420]        :                                       
[ 421]    07B3:                                       CHOP1:
[ 422]    07B3: 8A 14                                 MOV DL,[SI]
[ 423]    07B5: B4 02                                 MOV AH,02
[ 424]    07B7: CD 21                                 INT 21H
[ 425]    07B9: 46                                    INC SI
[ 426]    07BA: 80 3C 00                              CMP [SI],0
[ 427]    07BD: 75 F4                                 JNE CHOP1
[ 428]        :                                       
[ 429]    07BF: B2 2A                                 MOV DL,2AH
[ 430]    07C1: B4 02                                 MOV AH,02
[ 431]    07C3: CD 21                                 INT 21H
[ 432]        :                                       
[ 433]    07C5: B2 31                                 MOV DL,31H
[ 434]    07C7: B4 02                                 MOV AH,02
[ 435]    07C9: CD 21                                 INT 21H
[ 436]        :                                       
[ 437]    07CB: B2 30                                 MOV DL,30H
[ 438]    07CD: B4 02                                 MOV AH,02
[ 439]    07CF: CD 21                                 INT 21H
[ 440]        :                                       
[ 441]    07D1: B2 30                                 MOV DL,30H
[ 442]    07D3: B4 02                                 MOV AH,02
[ 443]    07D5: CD 21                                 INT 21H
[ 444]        :                                       
[ 445]    07D7: B2 0A                                 MOV DL,0AH
[ 446]    07D9: B4 02                                 MOV AH,02
[ 447]    07DB: CD 21                                 INT 21H
[ 448]    07DD: B2 0D                                 MOV DL,0DH
[ 449]    07DF: B4 02                                 MOV AH,02
[ 450]    07E1: CD 21                                 INT 21H
[ 451]        :                                       
[ 452]        :                                       
[ 453]    07E3:                                       NEXTLETER1:
[ 454]    07E3: 47                                    INC DI
[ 455]    07E4: 80 3D 00                              CMP [DI],000
[ 456]    07E7: 74 03 E9 4F FF                        JNE NEXTWORD11
[ 457]        :                                       
[ 458]        :                                       
[ 459]        :                                       
[ 460]        :                                       
[ 461]    07EC: C3                                    RET
[ 462]        :                                       CALCHITRATE ENDP
[ 463]        :                                       
[ 464]    07ED:                                       SHOWPROGRAM PROC NEAR
[ 465]    07ED: E8 B0 05                              CALL CLRSCR
[ 466]    07F0: BA 61 01                              LEA DX,MSGSPROG
[ 467]    07F3: B4 09                                 MOV AH,09H
[ 468]    07F5: CD 21                                 INT 21H
[ 469]        :                                       
[ 470]    07F7: 8B 3E 2B 02                           MOV DI,STARTLPR
[ 471]    07FB: B1 30                                 MOV CL,30H
[ 472]    07FD:                                       NEXTWORD:
[ 473]    07FD: FE C1                                 INC CL
[ 474]    07FF: 8A D1                                 MOV DL,CL
[ 475]    0801: B4 02                                 MOV AH,02
[ 476]    0803: CD 21                                 INT 21H
[ 477]        :                                       
[ 478]    0805: B2 2E                                 MOV DL,2EH
[ 479]    0807: B4 02                                 MOV AH,02
[ 480]    0809: CD 21                                 INT 21H
[ 481]        :                                       
[ 482]    080B: 8A 1D                                 MOV BL,[DI]
[ 483]    080D:                                       PRTSTR:
[ 484]        :                                       
[ 485]    080D: 8A D3                                 MOV DL,BL
[ 486]    080F: B4 02                                 MOV AH,02
[ 487]    0811: CD 21                                 INT 21H
[ 488]    0813: 47                                    INC DI
[ 489]    0814: 8A 1D                                 MOV BL,[DI]
[ 490]    0816: 80 FB 40                              CMP BL,40H
[ 491]    0819: 7D F2                                 JGE PRTSTR
[ 492]        :                                       
[ 493]    081B: B2 1A                                 MOV DL,1AH
[ 494]    081D: B4 02                                 MOV AH,02
[ 495]    081F: CD 21                                 INT 21H
[ 496]        :                                       
[ 497]    0821:                                       GETCOM:
[ 498]    0821: 8A 1D                                 MOV BL,[DI]
[ 499]    0823: 80 FB 30                              CMP BL,30H
[ 500]    0826: 7C 0C                                 JNGE BREAK
[ 501]    0828: 8A D3                                 MOV DL,BL
[ 502]    082A: B4 02                                 MOV AH,02
[ 503]    082C: CD 21                                 INT 21H
[ 504]    082E: 47                                    INC DI
[ 505]    082F: 80 3D 40                              CMP [DI],40H
[ 506]    0832: 7C ED                                 JL GETCOM
[ 507]        :                                       
[ 508]    0834:                                       BREAK:
[ 509]    0834: B2 4D                                 MOV DL,4DH
[ 510]    0836: B4 02                                 MOV AH,02
[ 511]    0838: CD 21                                 INT 21H
[ 512]    083A: B2 42                                 MOV DL,42H
[ 513]    083C: B4 02                                 MOV AH,02
[ 514]    083E: CD 21                                 INT 21H
[ 515]        :                                       
[ 516]    0840: B2 0A                                 MOV DL,0AH
[ 517]    0842: B4 02                                 MOV AH,02
[ 518]    0844: CD 21                                 INT 21H
[ 519]    0846: B2 0D                                 MOV DL,0DH
[ 520]    0848: B4 02                                 MOV AH,02
[ 521]    084A: CD 21                                 INT 21H
[ 522]        :                                       
[ 523]    084C: 3B 3E 2D 02                           CMP DI,ENDLPR
[ 524]    0850: 7C AB                                 JL NEXTWORD
[ 525]        :                                       
[ 526]        :                                       
[ 527]    0852: C3                                    RET
[ 528]        :                                       SHOWPROGRAM ENDP
[ 529]        :                                       
[ 530]        :                                       
[ 531]        :                                       
[ 532]    0853:                                       SHOWPAGE PROC NEAR
[ 533]    0853: E8 4A 05                              CALL CLRSCR
[ 534]    0856: BA 7F 01                              LEA DX,MSGPMEM ;Pages:
[ 535]    0859: B4 09                                 MOV AH,09H
[ 536]    085B: CD 21                                 INT 21H
[ 537]        :                                       
[ 538]    085D: 8B 3E 2B 02                           MOV DI,STARTLPR
[ 539]    0861: B1 30                                 MOV CL,30H
[ 540]    0863:                                       NEXTWORD112:
[ 541]    0863: FE C1                                 INC CL
[ 542]    0865: 8A D1                                 MOV DL,CL
[ 543]    0867: B4 02                                 MOV AH,02
[ 544]    0869: CD 21                                 INT 21H
[ 545]        :                                       
[ 546]    086B: B2 2E                                 MOV DL,2EH
[ 547]    086D: B4 02                                 MOV AH,02
[ 548]    086F: CD 21                                 INT 21H
[ 549]        :                                       
[ 550]    0871: 8A 1D                                 MOV BL,[DI]
[ 551]    0873:                                       PRTSTR112:
[ 552]        :                                       
[ 553]    0873: 8A D3                                 MOV DL,BL
[ 554]    0875: B4 02                                 MOV AH,02
[ 555]    0877: CD 21                                 INT 21H
[ 556]    0879: 47                                    INC DI
[ 557]    087A: 8A 1D                                 MOV BL,[DI]
[ 558]    087C: 80 FB 40                              CMP BL,40H
[ 559]    087F: 7D F2                                 JGE PRTSTR112
[ 560]        :                                       
[ 561]    0881: B2 0A                                 MOV DL,0AH
[ 562]    0883: B4 02                                 MOV AH,02
[ 563]    0885: CD 21                                 INT 21H
[ 564]    0887: B2 0D                                 MOV DL,0DH
[ 565]    0889: B4 02                                 MOV AH,02
[ 566]    088B: CD 21                                 INT 21H
[ 567]    088D:                                       NEXTELEMNT:
[ 568]    088D: 47                                    INC DI
[ 569]    088E: 80 3D 40                              CMP [DI],40H
[ 570]    0891: 7C FA                                 JL NEXTELEMNT
[ 571]    0893: 3B 3E 2D 02                           CMP DI,ENDLPR
[ 572]    0897: 7C CA                                 JL NEXTWORD112
[ 573]        :                                       
[ 574]    0899: C3                                    RET
[ 575]        :                                       SHOWPAGE ENDP
[ 576]        :                                       
[ 577]        :                                       
[ 578]        :                                       
[ 579]        :                                       
[ 580]    089A:                                       LOCATEPAGE PROC NEAR
[ 581]    089A: E8 51 03                              CALL DRAWMEMORY
[ 582]    089D: 8B 3E AE 03                           MOV DI,STARTLM
[ 583]    08A1: 89 3E E7 03                           MOV COUNTENDLIST,DI
[ 584]    08A5:                                       LLL:
[ 585]    08A5: A1 B0 03                              MOV AX,ENDLM
[ 586]    08A8: 3B 06 E7 03                           CMP AX,COUNTENDLIST
[ 587]    08AC: 7E 3D                                 JLE ENDFUNLO
[ 588]    08AE: 8B 3E E7 03                           MOV DI,COUNTENDLIST
[ 589]    08B2: 8B 05                                 MOV AX,[DI]
[ 590]    08B4: 83 C7 02                              ADD DI,2
[ 591]    08B7: 89 3E E7 03                           MOV COUNTENDLIST,DI
[ 592]    08BB: 3D 00 00                              CMP AX,0000
[ 593]    08BE: 74 E5                                 JE LLL
[ 594]    08C0: BE 05 00                              mov si,offset TestString
[ 595]    08C3: 89 04                                 MOV [SI],AX
[ 596]    08C5: E8 EF 04                              CALL PRINT
[ 597]    08C8: 33 DB                                 XOR BX,BX
[ 598]    08CA: 32 E4                                 XOR AH,AH
[ 599]    08CC: 8B 1E 10 00                           MOV BX,PMEM
[ 600]    08D0: B4 02                                 MOV AH,2
[ 601]    08D2: 03 1E 00 00                           ADD BX,TEST_TEXT_ROW
[ 602]    08D6: 02 26 04 00                           ADD AH,TEST_TEXT_COLOR
[ 603]    08DA: 89 1E 00 00                           MOV TEST_TEXT_ROW,BX
[ 604]    08DE: 88 26 04 00                           MOV TEST_TEXT_COLOR,AH
[ 605]    08E2: A1 B0 03                              MOV AX,ENDLM
[ 606]    08E5: 3B 06 E7 03                           CMP AX,COUNTENDLIST
[ 607]        :                                       
[ 608]    08E9: 7F BA                                 JG LLL
[ 609]    08EB:                                       ENDFUNLO:
[ 610]    08EB: BB 19 00                              MOV BX,25
[ 611]    08EE: 89 1E 00 00                           MOV TEST_TEXT_ROW,BX
[ 612]        :                                       
[ 613]    08F2: B4 0C                                 MOV AH,0CH
[ 614]    08F4: B0 01                                 mov aL,1
[ 615]    08F6: CD 21                                 INT 21H
[ 616]    08F8: B8 03 00                              mov     ax,3
[ 617]    08FB: CD 10                                 int     10h
[ 618]        :                                       
[ 619]    08FD: C3                                    RET
[ 620]        :                                       LOCATEPAGE ENDP
[ 621]        :                                       
[ 622]    08FE:                                       FREEMEMPAGE PROC NEAR
[ 623]    08FE: 80 3E E6 03 00                        CMP AVAILBPAGE,0
[ 624]    0903: 74 4B                                 JE ENDFREE
[ 625]    0905:                                       BACKFUN1:
[ 626]    0905: 33 C0                                 XOR AX,AX
[ 627]    0907: A0 2A 02                              MOV AL,NUMPAGEMEM
[ 628]    090A: B1 02                                 MOV CL,2
[ 629]    090C: F6 E1                                 MUL CL
[ 630]    090E: 2C 02                                 SUB AL,2
[ 631]    0910: A2 E5 03                              MOV DIVRANDM,AL
[ 632]    0913: 33 C0                                 XOR AX,AX
[ 633]    0915: E8 BD 01                              CALL GENERANDNUM
[ 634]    0918: 8B 3E AE 03                           MOV DI,STARTLM
[ 635]    091C: BB 00 00                              MOV BX,0000
[ 636]    091F: 8A 1E E4 03                           MOV BL,RANDNUM
[ 637]    0923: 03 FB                                 ADD DI,BX
[ 638]    0925: BB 00 00                              MOV BX,0000
[ 639]    0928: 8B 1D                                 MOV BX,[DI]
[ 640]    092A: 83 FB 00                              CMP BX,0000
[ 641]    092D: 74 D6                                 JE BACKFUN1
[ 642]    092F: B8 00 00                              MOV AX,0000
[ 643]    0932: 89 05                                 MOV [DI],AX
[ 644]        :                                       
[ 645]    0934: 3B 3E AC 03                           CMP DI,PTRLM
[ 646]    0938: 75 11                                 JNE FRONTH1
[ 647]    093A: 83 C7 02                              ADD DI,2
[ 648]    093D: 3B 3E B0 03                           CMP DI,ENDLM
[ 649]    0941: 7E 04                                 JLE FRONTH2
[ 650]    0943: 8B 3E AE 03                           MOV DI,STARTLM
[ 651]    0947:                                       FRONTH2:
[ 652]    0947: 89 3E AC 03                           MOV PTRLM,DI
[ 653]    094B:                                       FRONTH1:
[ 654]        :                                       
[ 655]    094B: 80 2E E6 03 01                        SUB AVAILBPAGE,1
[ 656]    0950:                                       ENDFREE:
[ 657]    0950: C3                                    RET
[ 658]        :                                       FREEMEMPAGE ENDP
[ 659]        :                                       
[ 660]    0951:                                       FREEMEMPAGEOPTIC PROC NEAR
[ 661]        :                                       
[ 662]    0951: E8 FF FE                              CALL SHOWPAGE
[ 663]        :                                       
[ 664]    0954: BA 95 01                              LEA DX,MSGPAGEOPT
[ 665]    0957: B4 09                                 MOV AH,09H
[ 666]    0959: CD 21                                 INT 21H
[ 667]        :                                       
[ 668]    095B: B4 0A                                 MOV AH,0AH
[ 669]    095D: BA 13 02                              LEA DX,TEMPWORD
[ 670]    0960: CD 21                                 INT 21H
[ 671]        :                                       
[ 672]    0962: 80 3E E6 03 00                        CMP AVAILBPAGE,0
[ 673]    0967: 74 53                                 JE ENDFREE1
[ 674]        :                                       
[ 675]        :                                       
[ 676]        :                                       
[ 677]    0969: BF 15 02                              LEA DI,KBDATATEMP
[ 678]    096C: 8A 05                                 MOV AL,[DI]
[ 679]        :                                       
[ 680]        :                                       
[ 681]    096E: 8B 3E AE 03                           MOV DI,STARTLM
[ 682]    0972: 83 EF 02                              SUB DI,2
[ 683]    0975:                                       BACKFUN111:
[ 684]    0975: 83 C7 02                              ADD DI,2
[ 685]    0978: 8B 1D                                 MOV BX,[DI]
[ 686]    097A: 3A D8                                 CMP BL,AL
[ 687]    097C: 74 06                                 JE FINDELEM
[ 688]    097E: 3B 3E B0 03                           CMP DI,ENDLM
[ 689]    0982: 7C F1                                 JL BACKFUN111
[ 690]        :                                       
[ 691]    0984:                                       FINDELEM:
[ 692]    0984: 3A D8                                 CMP BL,AL
[ 693]    0986: 75 34                                 JNE ENDFREE1
[ 694]    0988: 80 2E E6 03 01                        SUB AVAILBPAGE,1
[ 695]    098D: B8 00 00                              MOV AX,0000
[ 696]    0990: 89 05                                 MOV [DI],AX
[ 697]        :                                       
[ 698]        :                                       
[ 699]    0992: 89 3E 42 03                           MOV DIX,DI
[ 700]        :                                       
[ 701]    0996: 3B 3E AC 03                           CMP DI,PTRLM
[ 702]    099A: 75 11                                 JNE FRONTH111
[ 703]    099C: 83 C7 02                              ADD DI,2
[ 704]    099F: 3B 3E B0 03                           CMP DI,ENDLM
[ 705]    09A3: 7E 04                                 JLE FRONTH112
[ 706]    09A5: 8B 3E AE 03                           MOV DI,STARTLM
[ 707]    09A9:                                       FRONTH112:
[ 708]    09A9: 89 3E AC 03                           MOV PTRLM,DI
[ 709]    09AD:                                       FRONTH111:
[ 710]        :                                       
[ 711]    09AD: BF 15 02                              LEA DI,KBDATATEMP
[ 712]    09B0: 8A 05                                 MOV AL,[DI]
[ 713]        :                                       
[ 714]    09B2: 8B 3E 42 03                           MOV DI,DIX
[ 715]    09B6: 3B 3E AC 03                           CMP DI,PTRLM
[ 716]    09BA: 75 B9                                 JNE BACKFUN111
[ 717]        :                                       
[ 718]    09BC:                                       ENDFREE1:
[ 719]    09BC: C3                                    RET
[ 720]        :                                       FREEMEMPAGEOPTIC ENDP
[ 721]        :                                       
[ 722]        :                                       
[ 723]        :                                       
[ 724]    09BD:                                       ALLOCMEMPAGE PROC NEAR
[ 725]    09BD: 8A 1E E6 03                           MOV BL,AVAILBPAGE
[ 726]    09C1: 3A 1E 2A 02                           CMP BL,NUMPAGEMEM
[ 727]    09C5: 7C 03 E9 8F 00                        JGE FULLMEM
[ 728]    09CA:                                       BACKFUN:
[ 729]    09CA: 33 C0                                 XOR AX,AX
[ 730]    09CC: A0 3B 03                              MOV AL,NUMPAGEV
[ 731]    09CF: B1 02                                 MOV CL,2
[ 732]    09D1: F6 E1                                 MUL CL
[ 733]    09D3: 2C 02                                 SUB AL,2
[ 734]    09D5: A2 E5 03                              MOV DIVRANDM,AL
[ 735]    09D8: 33 C0                                 XOR AX,AX
[ 736]    09DA: E8 F8 00                              CALL GENERANDNUM
[ 737]    09DD: 8B 3E 39 03                           MOV DI,STARTLISTPAGE
[ 738]    09E1: BB 00 00                              MOV BX,0000
[ 739]    09E4: 8A 1E E4 03                           MOV BL,RANDNUM
[ 740]    09E8: 03 FB                                 ADD DI,BX
[ 741]    09EA: BB 00 00                              MOV BX,0000
[ 742]    09ED: 8B 1D                                 MOV BX,[DI]
[ 743]    09EF: 8B 36 AE 03                           MOV SI,STARTLM
[ 744]        :                                       
[ 745]    09F3: BA 00 00                              MOV DX,0H
[ 746]        :                                       
[ 747]    09F6:                                       FINDX12:
[ 748]    09F6: 8B 04                                 MOV AX,[SI]
[ 749]    09F8: 3B C3                                 CMP AX,BX
[ 750]    09FA: 74 0D                                 JE FRONTX12
[ 751]    09FC: 83 C6 02                              ADD SI,2
[ 752]    09FF: 3B 36 B0 03                           CMP SI,ENDLM
[ 753]    0A03: 7C F1                                 JL FINDX12
[ 754]        :                                       
[ 755]        :                                       
[ 756]        :                                       
[ 757]        :                                       
[ 758]    0A05: 3B C3                                 CMP AX,BX
[ 759]    0A07: 75 02                                 JNE NOTCHECK
[ 760]    0A09:                                       FRONTX12:
[ 761]    0A09: B2 01                                 MOV DL,1H
[ 762]        :                                       
[ 763]    0A0B:                                       NOTCHECK:
[ 764]        :                                       
[ 765]    0A0B: BF 44 03                              LEA DI,HITRATE
[ 766]    0A0E: 83 EF 04                              SUB DI,4
[ 767]    0A11:                                       CHECKHIT:
[ 768]    0A11: 83 C7 04                              ADD DI,4
[ 769]    0A14: 8B 05                                 MOV AX,[DI]
[ 770]    0A16: 3B C3                                 CMP AX,BX
[ 771]    0A18: 74 05                                 JE HITFOUND
[ 772]    0A1A: 3D 00 00                              CMP AX,0000
[ 773]    0A1D: 75 F2                                 JNE CHECKHIT
[ 774]        :                                       
[ 775]        :                                       
[ 776]    0A1F:                                       HITFOUND:
[ 777]    0A1F: 89 1D                                 MOV [DI],BX
[ 778]    0A21: 83 C7 02                              ADD DI,2
[ 779]    0A24: 00 15                                 ADD [DI],DL
[ 780]    0A26: 47                                    INC DI
[ 781]    0A27: 80 05 01                              ADD [DI],1H
[ 782]        :                                       
[ 783]    0A2A: 3B 1C                                 CMP BX,[SI]
[ 784]    0A2C: 75 03 E9 A3 00                        JE ENDFUN
[ 785]        :                                       
[ 786]    0A31: 8B 36 AE 03                           MOV SI,STARTLM
[ 787]        :                                       
[ 788]    0A35:                                       FINDX:
[ 789]    0A35: 8B 04                                 MOV AX,[SI]
[ 790]    0A37: 3D 00 00                              CMP AX,0000
[ 791]    0A3A: 74 09                                 JE FRONTX
[ 792]    0A3C: 83 C6 02                              ADD SI,2
[ 793]    0A3F: 3B 36 B0 03                           CMP SI,ENDLM
[ 794]    0A43: 7C F0                                 JL FINDX
[ 795]        :                                       
[ 796]    0A45:                                       FRONTX:
[ 797]    0A45: 89 1C                                 MOV [SI],BX ;FINDX [SI]=0000
[ 798]        :                                       
[ 799]    0A47: 80 06 E6 03 01                        ADD AVAILBPAGE,1
[ 800]    0A4C: BB 00 00                              MOV BX,0000
[ 801]    0A4F: 8A 1E E6 03                           MOV BL,AVAILBPAGE
[ 802]    0A53: 3A 1E 2A 02                           CMP BL,NUMPAGEMEM
[ 803]    0A57: 7E 7B                                 JLE ENDFUN
[ 804]        :                                       
[ 805]    0A59:                                       FULLMEM:
[ 806]        :                                       
[ 807]        :                                       
[ 808]    0A59:                                       BACKFUN2:
[ 809]    0A59: 33 C0                                 XOR AX,AX
[ 810]    0A5B: A0 3B 03                              MOV AL,NUMPAGEV
[ 811]    0A5E: B1 02                                 MOV CL,2
[ 812]    0A60: F6 E1                                 MUL CL
[ 813]    0A62: 2C 02                                 SUB AL,2
[ 814]    0A64: A2 E5 03                              MOV DIVRANDM,AL
[ 815]    0A67: 33 C0                                 XOR AX,AX
[ 816]    0A69: E8 69 00                              CALL GENERANDNUM
[ 817]    0A6C: 8B 3E 39 03                           MOV DI,STARTLISTPAGE
[ 818]    0A70: BB 00 00                              MOV BX,0000
[ 819]    0A73: 8A 1E E4 03                           MOV BL,RANDNUM
[ 820]    0A77: 03 FB                                 ADD DI,BX
[ 821]    0A79: BB 00 00                              MOV BX,0000
[ 822]    0A7C: 8B 1D                                 MOV BX,[DI]
[ 823]        :                                       
[ 824]    0A7E: 8B 36 AE 03                           MOV SI,STARTLM
[ 825]        :                                       
[ 826]    0A82: BA 00 00                              MOV DX,0H
[ 827]        :                                       
[ 828]    0A85:                                       FINDX122:
[ 829]    0A85: 8B 04                                 MOV AX,[SI]
[ 830]    0A87: 3B C3                                 CMP AX,BX
[ 831]    0A89: 74 0D                                 JE FRONTX122
[ 832]    0A8B: 83 C6 02                              ADD SI,2
[ 833]    0A8E: 3B 36 B0 03                           CMP SI,ENDLM
[ 834]    0A92: 7C F1                                 JL FINDX122
[ 835]        :                                       
[ 836]        :                                       
[ 837]        :                                       
[ 838]        :                                       
[ 839]    0A94: 3B C3                                 CMP AX,BX
[ 840]    0A96: 75 02                                 JNE NOTCHECK1
[ 841]    0A98:                                       FRONTX122:
[ 842]    0A98: B2 01                                 MOV DL,1H
[ 843]        :                                       
[ 844]    0A9A:                                       NOTCHECK1:
[ 845]        :                                       
[ 846]    0A9A: BF 44 03                              LEA DI,HITRATE
[ 847]    0A9D: 83 EF 04                              SUB DI,4
[ 848]    0AA0:                                       CHECKHIT1:
[ 849]    0AA0: 83 C7 04                              ADD DI,4
[ 850]    0AA3: 8B 05                                 MOV AX,[DI]
[ 851]    0AA5: 3B C3                                 CMP AX,BX
[ 852]    0AA7: 74 05                                 JE HITFOUND1
[ 853]    0AA9: 3D 00 00                              CMP AX,0000
[ 854]    0AAC: 75 F2                                 JNE CHECKHIT1
[ 855]        :                                       
[ 856]        :                                       
[ 857]    0AAE:                                       HITFOUND1:
[ 858]    0AAE: 89 1D                                 MOV [DI],BX
[ 859]    0AB0: 83 C7 02                              ADD DI,2
[ 860]    0AB3: 00 15                                 ADD [DI],DL
[ 861]    0AB5: 47                                    INC DI
[ 862]    0AB6: 80 05 01                              ADD [DI],1H
[ 863]        :                                       
[ 864]        :                                       
[ 865]    0AB9: 3B 1C                                 CMP BX,[SI]
[ 866]    0ABB: 74 17                                 JE ENDFUN
[ 867]        :                                       
[ 868]    0ABD: 8B 36 AC 03                           MOV SI,PTRLM
[ 869]        :                                       
[ 870]    0AC1: 89 1C                                 MOV [SI],BX
[ 871]        :                                       
[ 872]    0AC3: 83 C6 02                              ADD SI,2
[ 873]    0AC6: 3B 36 B0 03                           CMP SI,ENDLM
[ 874]    0ACA: 7C 04                                 JL FRONTER
[ 875]    0ACC: 8B 36 AE 03                           MOV SI,STARTLM
[ 876]    0AD0:                                       FRONTER:
[ 877]    0AD0: 89 36 AC 03                           MOV PTRLM,SI
[ 878]        :                                       
[ 879]    0AD4:                                       ENDFUN:
[ 880]        :                                       
[ 881]    0AD4: C3                                    RET
[ 882]        :                                       ALLOCMEMPAGE ENDP
[ 883]        :                                       
[ 884]    0AD5:                                       GENERANDNUM PROC NEAR
[ 885]        :                                       
[ 886]    0AD5: 33 C9                                 XOR CX,CX
[ 887]    0AD7: B4 00                                 MOV AH, 00h  ; interrupts to get system time
[ 888]    0AD9: CD 1A                                 INT 1AH
[ 889]        :                                       
[ 890]    0ADB: 80 3E E5 03 00                        CMP DIVRANDM,0
[ 891]    0AE0: 75 05                                 JNE OKEY
[ 892]    0AE2: 80 06 E5 03 01                        ADD DIVRANDM,1
[ 893]        :                                       
[ 894]        :                                       
[ 895]    0AE7:                                       OKEY:
[ 896]    0AE7: 8B C2                                 mov  ax, dx
[ 897]    0AE9: 33 D2                                 xor  dx, dx
[ 898]    0AEB: 8A 0E E5 03                           mov  cl, DIVRANDM
[ 899]    0AEF: F7 F1                                 div  cx       ; here dx contains the remainder of the division - from 0 to 9
[ 900]        :                                       
[ 901]        :                                       
[ 902]    0AF1: 8B C2                                 MOV AX,DX
[ 903]    0AF3: B1 02                                 MOV CL,2
[ 904]    0AF5: F6 F1                                 DIV CL
[ 905]    0AF7: 80 FC 00                              CMP AH,00
[ 906]    0AFA: 74 03                                 JZ NEXTR
[ 907]    0AFC: 80 C2 01                              ADD DL,1
[ 908]        :                                       
[ 909]    0AFF:                                       NEXTR:
[ 910]    0AFF: 88 16 E4 03                           MOV RANDNUM,DL
[ 911]    0B03: C3                                    RET
[ 912]        :                                       GENERANDNUM ENDP
[ 913]        :                                       
[ 914]    0B04:                                       SETSIZEMEMPAGE PROC NEAR
[ 915]    0B04: BA A2 00                              LEA DX,MSG1
[ 916]    0B07: B4 09                                 MOV AH,09H
[ 917]    0B09: CD 21                                 INT 21H
[ 918]        :                                       
[ 919]    0B0B: B4 0A                                 MOV AH,0AH
[ 920]    0B0D: BA BB 01                              LEA DX,SIZEMEMORY
[ 921]    0B10: CD 21                                 INT 21H
[ 922]        :                                       
[ 923]    0B12: BE 29 02                              MOV SI,OFFSET SIZEMEM
[ 924]    0B15: BF BD 01                              MOV DI,OFFSET KBDATA1
[ 925]    0B18: 8A 0E BC 01                           MOV CL,ACTELN1
[ 926]        :                                       
[ 927]    0B1C:                                       BACK:
[ 928]    0B1C: 8A 05                                 MOV AL,[DI]
[ 929]    0B1E: 2C 30                                 SUB AL,30H
[ 930]    0B20: 47                                    INC DI
[ 931]    0B21: FE C9                                 DEC CL
[ 932]    0B23: 74 17                                 JZ NEXT
[ 933]    0B25: 8A 25                                 MOV AH,[DI]
[ 934]    0B27: 80 EC 30                              SUB AH,30H
[ 935]        :                                       
[ 936]    0B2A: D0 C8 D0 C8 D0 C8 D0 C8               ROR AL,4
[ 937]    0B32: 02 C4                                 ADD AL,AH
[ 938]    0B34: 88 04                                 MOV [SI],AL
[ 939]    0B36: 46                                    INC SI
[ 940]    0B37: 47                                    INC DI
[ 941]    0B38: FE C9                                 DEC CL
[ 942]    0B3A: 75 E0                                 JNZ BACK
[ 943]    0B3C: 88 04                                 NEXT:MOV [SI],AL
[ 944]        :                                       
[ 945]    0B3E: B8 00 00                              MOV AX,0
[ 946]    0B41: BE 29 02                              MOV SI,OFFSET SIZEMEM
[ 947]    0B44: 8A 04                                 MOV AL,[SI]
[ 948]        :                                       
[ 949]        :                                       
[ 950]    0B46: 8A D8                                 	MOV BL,AL    ;4-Move AL to BL	
[ 951]    0B48: 80 E3 0F                              	AND BL,0FH   ;5-Insert low digit in BL	
[ 952]    0B4B: B1 04                                 	MOV CL,4     ;6-Move 4 in CL for rotate
[ 953]    0B4D: 24 F0                                 	AND AL,0F0H  ;7-Insert high digit in AL
[ 954]    0B4F: D2 C8                                 	ROR AL,CL    ;8-Insert high digit in low
[ 955]        :                                       ;			four bits of AL	
[ 956]    0B51: B1 0A                                 	MOV CL,0AH   ;9-Move 10 to CL
[ 957]    0B53: F6 E1                                 	MUL CL	     ;10-Multiply high digit
[ 958]        :                                       ;			of number by 10
[ 959]    0B55: 02 C3                                 	ADD AL,BL    ;11-Calculate binary number 	
[ 960]        :                                       
[ 961]        :                                       
[ 962]        :                                       
[ 963]    0B57: 8A C8                                 MOV CL,AL
[ 964]    0B59: B8 14 00                              MOV AX,20
[ 965]    0B5C:                                       B11:
[ 966]    0B5C: 05 14 00                              ADD AX,20
[ 967]    0B5F: FE C9                                 DEC CL
[ 968]    0B61: 75 F9                                 JNZ B11
[ 969]        :                                       
[ 970]        :                                       
[ 971]    0B63: BF 0E 00                              MOV DI,OFFSET EPOINT
[ 972]    0B66: 89 05                                 MOV [DI],AX
[ 973]    0B68: 83 C7 02                              ADD DI,2
[ 974]    0B6B: 89 15                                 MOV [DI],DX
[ 975]        :                                       
[ 976]        :                                       
[ 977]        :                                       
[ 978]    0B6D: BA B5 00                              LEA DX,MSG2
[ 979]    0B70: B4 09                                 MOV AH,09H
[ 980]    0B72: CD 21                                 INT 21H
[ 981]        :                                       
[ 982]        :                                       ;get string {
[ 983]    0B74: B4 0A                                 MOV AH,0AH
[ 984]    0B76: BA BB 01                              LEA DX,SIZEMEMORY
[ 985]    0B79: CD 21                                 INT 21H
[ 986]        :                                       
[ 987]    0B7B: BE 12 00                              MOV SI,OFFSET SPAGE
[ 988]    0B7E: BF BD 01                              MOV DI,OFFSET KBDATA1
[ 989]    0B81: 8A 0E BC 01                           MOV CL,ACTELN1
[ 990]        :                                       
[ 991]    0B85:                                       BACK1:
[ 992]    0B85: 8A 05                                 MOV AL,[DI]
[ 993]    0B87: 2C 30                                 SUB AL,30H
[ 994]    0B89: 47                                    INC DI
[ 995]    0B8A: FE C9                                 DEC CL
[ 996]    0B8C: 74 17                                 JZ NEXT1
[ 997]    0B8E: 8A 25                                 MOV AH,[DI]
[ 998]    0B90: 80 EC 30                              SUB AH,30H
[ 999]        :                                       
[1000]    0B93: D0 C8 D0 C8 D0 C8 D0 C8               ROR AL,4
[1001]    0B9B: 02 C4                                 ADD AL,AH
[1002]    0B9D: 88 04                                 MOV [SI],AL
[1003]    0B9F: 46                                    INC SI
[1004]    0BA0: 47                                    INC DI
[1005]    0BA1: FE C9                                 DEC CL
[1006]    0BA3: 75 E0                                 JNZ BACK1
[1007]    0BA5: 88 04                                 NEXT1:MOV [SI],AL
[1008]        :                                       
[1009]    0BA7: B8 00 00                              MOV AX,0
[1010]    0BAA: BE 12 00                              MOV SI,OFFSET SPAGE
[1011]    0BAD: 8A 04                                 MOV AL,[SI]
[1012]        :                                       
[1013]    0BAF: B9 14 00                              MOV CX,20
[1014]    0BB2: F7 E1                                 MUL CX
[1015]        :                                       
[1016]    0BB4: BF 10 00                              MOV DI,OFFSET PMEM
[1017]    0BB7: 89 05                                 MOV [DI],AX
[1018]    0BB9: 83 C7 02                              ADD DI,2
[1019]        :                                       ; MOV [DI],DX
[1020]        :                                       
[1021]    0BBC: A0 29 02                              MOV AL,SIZEMEM
[1022]        :                                       
[1023]    0BBF: 8A D8                                 MOV BL,AL    ;4-Move AL to BL	
[1024]    0BC1: 80 E3 0F                              	AND BL,0FH   ;5-Insert low digit in BL	
[1025]    0BC4: B1 04                                 	MOV CL,4     ;6-Move 4 in CL for rotate
[1026]    0BC6: 24 F0                                 	AND AL,0F0H  ;7-Insert high digit in AL
[1027]    0BC8: D2 C8                                 	ROR AL,CL    ;8-Insert high digit in low
[1028]        :                                       ;			four bits of AL	
[1029]    0BCA: B1 0A                                 	MOV CL,0AH   ;9-Move 10 to CL
[1030]    0BCC: F6 E1                                 	MUL CL	     ;10-Multiply high digit
[1031]        :                                       ;			of number by 10
[1032]    0BCE: 02 C3                                 	ADD AL,BL    ;11-Calculate binary number 	
[1033]        :                                       
[1034]    0BD0: 8A 0E 12 00                           MOV CL,SPAGE
[1035]        :                                       
[1036]    0BD4: F6 F1                                 DIV CL
[1037]    0BD6: 80 FC 00                              CMP AH,00
[1038]    0BD9: 74 04                                 JZ FRONT1
[1039]    0BDB: B4 00                                 MOV AH,00
[1040]    0BDD: 04 01                                 ADD AL,1
[1041]    0BDF:                                       FRONT1:
[1042]    0BDF: A2 2A 02                              MOV NUMPAGEMEM,AL
[1043]    0BE2: B1 02                                 MOV CL,2
[1044]    0BE4: F6 E1                                 MUL CL
[1045]    0BE6: 03 06 AE 03                           ADD AX,STARTLM
[1046]    0BEA: A3 B0 03                              MOV ENDLM,AX
[1047]    0BED: C3                                    RET
[1048]        :                                       SETSIZEMEMPAGE ENDP
[1049]        :                                       
[1050]        :                                       
[1051]    0BEE:                                       DRAWMEMORY PROC NEAR
[1052]    0BEE: B4 00                                 MOV AH,0h        ;7-Service 0 INT 10H
[1053]    0BF0: B0 12                                 MOV AL,12H      ;8-Mode 13, 320*200
[1054]    0BF2: CD 10                                 INT 10H
[1055]    0BF4: BE 0E 00                              MOV SI,OFFSET EPOINT
[1056]        :                                       
[1057]    0BF7: B9 14 00                              mov cx,20
[1058]    0BFA: BA 14 00                              mov dx,20
[1059]    0BFD: BB 14 00                              mov bx,20
[1060]    0C00:                                       loo:
[1061]    0C00: 8B 16 0C 00                           mov dx,SPOINT
[1062]    0C04: B9 14 00                              mov cx,20
[1063]    0C07: B8 00 00                              mov ax,0
[1064]    0C0A: B4 0C                                 mov ah, 0ch
[1065]    0C0C: B0 02                                 mov al,2h
[1066]    0C0E: CD 10                                 int 10h
[1067]    0C10: 42                                    inc dx
[1068]    0C11: 89 16 0C 00                           mov SPOINT,dx
[1069]    0C15: BA 14 00                              mov dx,20
[1070]    0C18: 8B CB                                 mov cx,bx
[1071]    0C1A: 41                                    inc cx
[1072]    0C1B: CD 10                                 int 10h
[1073]    0C1D: 8B D9                                 mov bx,cx
[1074]    0C1F: 83 F9 50                              cmp cx,80
[1075]    0C22: 75 DC                                 jnz loo
[1076]    0C24: 8B 16 0C 00                           mov dx,SPOINT
[1077]    0C28: B9 14 00                              mov cx,20
[1078]    0C2B: B8 00 00                              looo:    mov ax,0
[1079]    0C2E: B4 0C                                 mov ah, 0ch
[1080]    0C30: B0 02                                 mov al,2h
[1081]    0C32: CD 10                                 int 10h
[1082]    0C34: 42                                    inc dx
[1083]    0C35: 89 16 0C 00                           mov SPOINT,dx
[1084]    0C39: 3B 14                                 cmp dx,[SI]
[1085]    0C3B: 75 EE                                 jnz looo
[1086]        :                                       
[1087]        :                                       ;inja shekl kamel mishe:
[1088]    0C3D:                                       loo1:
[1089]    0C3D: 8B 16 0C 00                           mov dx,SPOINT
[1090]    0C41: B9 50 00                              mov cx,80
[1091]    0C44: B8 00 00                              mov ax,0
[1092]    0C47: B4 0C                                 mov ah, 0ch
[1093]    0C49: B0 02                                 mov al,2h
[1094]    0C4B: CD 10                                 int 10h
[1095]    0C4D: 4A                                    dec dx
[1096]    0C4E: 89 16 0C 00                           mov SPOINT,dx
[1097]    0C52: 8B 14                                 mov dx,[SI]
[1098]    0C54: 8B CB                                 mov cx,bx
[1099]    0C56: 49                                    dec cx
[1100]    0C57: CD 10                                 int 10h
[1101]    0C59: 8B D9                                 mov bx,cx
[1102]    0C5B: 83 F9 14                              cmp cx,20
[1103]    0C5E: 75 DD                                 jnz loo1
[1104]    0C60: 8B 16 0C 00                           mov dx,SPOINT
[1105]    0C64: B9 50 00                              mov cx,80
[1106]    0C67: B8 00 00                              looo1:    mov ax,0
[1107]    0C6A: B4 0C                                 mov ah, 0ch
[1108]    0C6C: B0 02                                 mov al,2h
[1109]    0C6E: CD 10                                 int 10h
[1110]    0C70: 4A                                    dec dx
[1111]    0C71: 89 16 0C 00                           mov SPOINT,dx
[1112]    0C75: 83 FA 14                              cmp dx,20
[1113]    0C78: 75 ED                                 jnz looo1
[1114]        :                                       
[1115]        :                                       ; tike bandi shekl
[1116]    0C7A: BF 10 00                              LEA DI,PMEM
[1117]    0C7D: B9 14 00                              mov cx,20
[1118]    0C80: BA 14 00                              mov dx,20
[1119]    0C83: 03 15                                 ADD DX,[DI]
[1120]    0C85: BB 14 00                              mov bx,20
[1121]    0C88:                                       loo2:
[1122]    0C88: B4 0C                                 mov ah, 0ch
[1123]    0C8A: B0 02                                 mov al,2h
[1124]    0C8C: CD 10                                 int 10h
[1125]    0C8E: 41                                    inc cx
[1126]    0C8F: 83 F9 50                              cmp cx,80
[1127]    0C92: 75 F4                                 jnz loo2
[1128]    0C94: 03 15                                 add dx,[DI]
[1129]    0C96: B9 14 00                              mov cx,20
[1130]    0C99: 3B 14                                 cmp dx,[SI]
[1131]    0C9B: 72 EB                                 jC loo2
[1132]    0C9D: C3                                    RET
[1133]        :                                       DRAWMEMORY ENDP
[1134]        :                                       
[1135]    0C9E:                                       SETPROGRAM PROC NEAR
[1136]    0C9E:                                       RESTPROG:
[1137]    0C9E: E8 FF 00                              CALL CLRSCR
[1138]        :                                       
[1139]    0CA1: BA 4F 01                              LEA DX,MSGNPROG
[1140]    0CA4: B4 09                                 MOV AH,09H
[1141]    0CA6: CD 21                                 INT 21H
[1142]    0CA8: BA C8 00                              LEA DX,MSG3
[1143]    0CAB: B4 09                                 MOV AH,09H
[1144]    0CAD: CD 21                                 INT 21H
[1145]        :                                       
[1146]    0CAF: B4 0A                                 MOV AH,0AH
[1147]    0CB1: BA E7 01                              LEA DX,NAMEPROG
[1148]    0CB4: CD 21                                 INT 21H
[1149]        :                                       
[1150]    0CB6: BA E0 00                              LEA DX,MSG4
[1151]    0CB9: B4 09                                 MOV AH,09H
[1152]    0CBB: CD 21                                 INT 21H
[1153]        :                                       
[1154]    0CBD: B4 0A                                 MOV AH,0AH
[1155]    0CBF: BA FD 01                              LEA DX,SIZEPROG
[1156]    0CC2: CD 21                                 INT 21H
[1157]        :                                       
[1158]        :                                       
[1159]    0CC4: 8B 36 2D 02                           MOV SI,ENDLPR
[1160]    0CC8: BF E9 01                              MOV DI,OFFSET NPKBDATA
[1161]    0CCB: 8A 0E E8 01                           MOV CL,NPACTELN
[1162]        :                                       
[1163]    0CCF:                                       BACK2:
[1164]    0CCF: 8A 05                                 MOV AL,[DI]
[1165]    0CD1: 47                                    INC DI
[1166]    0CD2: 88 04                                 MOV [SI],AL
[1167]    0CD4: 46                                    INC SI
[1168]    0CD5: FE C9                                 DEC CL
[1169]    0CD7: 75 F6                                 JNZ BACK2
[1170]        :                                       
[1171]    0CD9: 89 36 2D 02                           MOV ENDLPR,SI
[1172]        :                                       
[1173]        :                                       
[1174]    0CDD: 8B 36 2D 02                           MOV SI, ENDLPR
[1175]    0CE1: BF FF 01                              MOV DI,OFFSET SPKBDATA
[1176]    0CE4: 8A 0E FE 01                           MOV CL,SPACTELN
[1177]        :                                       
[1178]    0CE8:                                       BACK3:
[1179]    0CE8: 8A 05                                 MOV AL,[DI]
[1180]    0CEA: 47                                    INC DI
[1181]    0CEB: 88 04                                 MOV [SI],AL
[1182]    0CED: 46                                    INC SI
[1183]    0CEE: FE C9                                 DEC CL
[1184]    0CF0: 75 F6                                 JNZ BACK3
[1185]        :                                       
[1186]    0CF2: 89 36 2D 02                           MOV ENDLPR,SI
[1187]        :                                       ;-------------------------
[1188]        :                                       
[1189]    0CF6: BF FF 01                              MOV DI,OFFSET SPKBDATA
[1190]    0CF9: 8A 0E FE 01                           MOV CL,SPACTELN
[1191]    0CFD: 8A 05                                 MOV AL,[DI]
[1192]    0CFF: 2C 30                                 SUB AL,30H
[1193]    0D01: 47                                    INC DI
[1194]    0D02: FE C9                                 DEC CL
[1195]    0D04: 74 0F                                 JZ NEXTT
[1196]    0D06: 8A 25                                 MOV AH,[DI]
[1197]    0D08: 80 EC 30                              SUB AH,30H
[1198]    0D0B: D0 C8 D0 C8 D0 C8 D0 C8               ROR AL,4
[1199]    0D13: 02 C4                                 ADD AL,AH
[1200]    0D15:                                       NEXTT:
[1201]        :                                       
[1202]    0D15: 8A D8                                 MOV BL,AL    ;4-Move AL to BL	
[1203]    0D17: 80 E3 0F                              	AND BL,0FH   ;5-Insert low digit in BL	
[1204]    0D1A: B1 04                                 	MOV CL,4     ;6-Move 4 in CL for rotate
[1205]    0D1C: 24 F0                                 	AND AL,0F0H  ;7-Insert high digit in AL
[1206]    0D1E: D2 C8                                 	ROR AL,CL    ;8-Insert high digit in low
[1207]        :                                       ;			four bits of AL	
[1208]    0D20: B1 0A                                 	MOV CL,0AH   ;9-Move 10 to CL
[1209]    0D22: F6 E1                                 	MUL CL	     ;10-Multiply high digit
[1210]        :                                       ;			of number by 10
[1211]    0D24: 02 C3                                 	ADD AL,BL    ;11-Calculate binary number 	
[1212]        :                                       
[1213]    0D26: B4 00                                 MOV AH,0
[1214]    0D28: B9 00 00                              MOV CX,0
[1215]    0D2B: 8A 0E 12 00                           MOV CL,SPAGE
[1216]    0D2F: F6 F1                                 DIV CL
[1217]        :                                       
[1218]    0D31: 80 FC 00                              CMP AH,00
[1219]    0D34: 74 04                                 JZ FRONT
[1220]    0D36: 04 01                                 ADD AL,1
[1221]    0D38: B4 00                                 MOV AH,00
[1222]    0D3A:                                       FRONT:
[1223]        :                                       
[1224]    0D3A: 8B C8                                 MOV CX,AX
[1225]        :                                       
[1226]    0D3C: BF 10 03                              LEA DI,NUMOFPAGEP
[1227]    0D3F: 83 EF 02                              SUB DI,2
[1228]    0D42:                                       FINDPOS1:
[1229]    0D42: 83 C7 02                              ADD DI,2
[1230]    0D45: 80 3D 00                              CMP [DI],00
[1231]    0D48: 75 F8                                 JNE FINDPOS1
[1232]    0D4A: 89 05                                 MOV [DI],AX
[1233]        :                                       
[1234]    0D4C: 02 06 BF 02                           ADD AL,NUMPAGEVIRTU
[1235]    0D50: A2 BF 02                              MOV NUMPAGEVIRTU,AL
[1236]        :                                       
[1237]    0D53: B2 30                                 MOV DL,30H
[1238]        :                                       
[1239]    0D55: 8B 36 59 02                           MOV SI,ENDLPA
[1240]    0D59: BF C0 02                              LEA DI,OFFSETPAGE
[1241]    0D5C: 83 EF 02                              SUB DI,2
[1242]    0D5F:                                       FINDPOS:
[1243]    0D5F: 83 C7 02                              ADD DI,2
[1244]    0D62: 80 3D 00                              CMP [DI],00
[1245]    0D65: 75 F8                                 JNE FINDPOS
[1246]    0D67: 89 35                                 MOV [DI],SI
[1247]    0D69: BF E9 01                              MOV DI,OFFSET NPKBDATA
[1248]        :                                       
[1249]        :                                       
[1250]    0D6C: 8A 05                                 MOV AL,[DI]
[1251]    0D6E:                                       BACK4:
[1252]    0D6E: 88 04                                 MOV [SI],AL
[1253]    0D70: 46                                    INC SI
[1254]    0D71: 88 14                                 MOV [SI],DL
[1255]    0D73: FE C2                                 INC DL
[1256]    0D75: 46                                    INC SI
[1257]    0D76: 49                                    DEC CX
[1258]    0D77: 75 F5                                 JNZ BACK4
[1259]        :                                       
[1260]    0D79: A0 38 03                              MOV AL,NUMOFPROG
[1261]    0D7C: 05 01 00                              ADD AX,1H
[1262]    0D7F: A2 38 03                              MOV NUMOFPROG,AL
[1263]        :                                       
[1264]        :                                       
[1265]    0D82: 89 36 59 02                           MOV ENDLPA,SI
[1266]    0D86: BA F9 00                              LEA DX,MSG5     ;do you back main menu(N) or contine to input new porgram(Y)
[1267]    0D89: B4 09                                 MOV AH,09H
[1268]    0D8B: CD 21                                 INT 21H
[1269]        :                                       
[1270]    0D8D: B4 07                                 MOV AH,7H
[1271]    0D8F: CD 21                                 INT 21H
[1272]    0D91: 3C 59                                 CMP AL,'Y'
[1273]    0D93: 75 03 E9 06 FF                        JE RESTPROG
[1274]    0D98: 3C 79                                 CMP AL,'y'
[1275]    0D9A: 75 03 E9 FF FE                        JE RESTPROG
[1276]    0D9F: C3                                    RET
[1277]        :                                       SETPROGRAM ENDP
[1278]        :                                       
[1279]    0DA0:                                       CLRSCR PROC NEAR
[1280]        :                                       
[1281]    0DA0: B8 00 06                              MOV AX,0600H    ;06 TO SCROLL & 00 FOR FULLJ SCREEN
[1282]    0DA3: B7 07                                 MOV BH,07H    ;ATTRIBUTE 7 FOR BACKGROUND AND 1 FOR FOREGROUND
[1283]    0DA5: B9 00 00                              MOV CX,0000H    ;STARTING COORDINATES
[1284]    0DA8: BA 4F 18                              MOV DX,184FH    ;ENDING COORDINATES
[1285]    0DAB: CD 10                                 INT 10H        ;FOR VIDEO DISPLAY
[1286]    0DAD: B4 02                                 MOV AH,02H
[1287]    0DAF: BA 00 00                              MOV DX,0000
[1288]    0DB2: B7 00                                 MOV BH,00
[1289]    0DB4: CD 10                                 INT 10H
[1290]    0DB6: C3                                    RET
[1291]        :                                       CLRSCR ENDP
[1292]        :                                       
[1293]        :                                       ;------------------text-drawing-----------------
[1294]    0DB7:                                       PRINT PROC NEAR
[1295]    0DB7: BA CE 03                              mov     dx,GC_INDEX
[1296]    0DBA: B0 00                                 mov     al,GC_SET_RESET
[1297]    0DBC: EE                                    out     dx,al
[1298]    0DBD: 42                                    inc     dx
[1299]    0DBE: EC                                    in      al,dx
[1300]    0DBF: 24 F0                                 and     al,0f0h
[1301]    0DC1: 0C 01                                 or      al,1            	;blue plane only set, others reset
[1302]    0DC3: EE                                    out     dx,al
[1303]    0DC4: 4A                                    dec     dx
[1304]    0DC5: B0 01                                 mov     al,GC_ENABLE_SET_RESET
[1305]    0DC7: EE                                    out     dx,al
[1306]    0DC8: 42                                    inc     dx
[1307]    0DC9: EC                                    in      al,dx
[1308]    0DCA: 24 F0                                 and     al,0f0h
[1309]    0DCC: 0C 0F                                 or      al,0fh          	;enable set/reset for all planes
[1310]    0DCE: EE                                    out     dx,al
[1311]    0DCF: BA 00 A0                              mov     dx,VGA_VIDEO_SEGMENT
[1312]    0DD2: 8E C2                                 mov     es,dx           	;point to display memory
[1313]        :                                       
[1314]        :                                       ;
[1315]        :                                       ; Set driver to use the 8x14 font.
[1316]        :                                       ;
[1317]    0DD4: B4 11                                 mov     ah,11h  		;VGA BIOS character generator function,
[1318]    0DD6: B0 30                                 mov     al,30h  		; return info subfunction
[1319]    0DD8: B7 02                                 mov     bh,2    		;get 8x14 font pointer
[1320]    0DDA: CD 10                                 int     10h
[1321]    0DDC: E8 C8 00                              call    SelectFont
[1322]        :                                       ;
[1323]        :                                       ; Print the test string.
[1324]        :                                       ;
[1325]    0DDF: BE 05 00                              mov     si,offset TestString
[1326]    0DE2: 8B 1E 00 00                           mov     bx,TEST_TEXT_ROW
[1327]    0DE6: 8B 0E 02 00                           mov     cx,TEST_TEXT_COL
[1328]    0DEA: 8A 26 04 00                           mov     ah,TEST_TEXT_COLOR
[1329]    0DEE: E8 00 00                              call    DrawString
[1330]        :                                       PRINT   ENDP
[1331]        :                                       
[1332]        :                                       
[1333]        :                                       
[1334]    0DF1:                                       DrawString      proc    near
[1335]    0DF1: 50                                    push    ax
[1336]    0DF2: 53                                    push    bx
[1337]    0DF3: 51                                    push    cx
[1338]    0DF4: 52                                    push    dx
[1339]    0DF5: 56                                    push    si
[1340]    0DF6: 57                                    push    di
[1341]    0DF7: 55                                    push    bp
[1342]    0DF8: 1E                                    push    ds
[1343]        :                                       
[1344]    0DF9: BA CE 03                              mov     dx,GC_INDEX
[1345]    0DFC: B0 00                                 mov     al,GC_SET_RESET
[1346]    0DFE: EE                                    out     dx,al
[1347]    0DFF: 42                                    inc     dx
[1348]    0E00: EC                                    in      al,dx
[1349]    0E01: 24 F0                                 and     al,0f0h
[1350]    0E03: 80 E4 0F                              and     ah,0fh
[1351]    0E06: 0A C4                                 or      al,ah
[1352]    0E08: EE                                    out     dx,al
[1353]        :                                       
[1354]    0E09: BA CE 03                              mov     dx,GC_INDEX
[1355]    0E0C: B0 05                                 mov     al,GC_MODE
[1356]    0E0E: EE                                    out     dx,al
[1357]    0E0F: 42                                    inc     dx
[1358]    0E10: EC                                    in      al,dx
[1359]    0E11: 0C 03                                 or      al,3
[1360]    0E13: EE                                    out     dx,al
[1361]    0E14: BA 00 A0                              mov     dx,VGA_VIDEO_SEGMENT
[1362]    0E17: 8E C2                                 mov     es,dx                   ;point to display memory
[1363]        :                                       ;
[1364]        :                                       ; Calculate screen address of byte character starts in.
[1365]        :                                       ;
[1366]    0E19: 1E                                    push    ds      		;point to BIOS data segment
[1367]    0E1A: 2B D2                                 sub     dx,dx
[1368]    0E1C: 8E DA                                 mov     ds,dx
[1369]    0E1E: 3E 8B 3E 4A 04                        mov     di,ds:[SCREEN_WIDTH_IN_BYTES]   ;retrieve BIOS
[1370]        :                                       ; screen width
[1371]    0E23: 1F                                    pop     ds
[1372]    0E24: 8B C3                                 mov     ax,bx   		;row
[1373]    0E26: F7 E7                                 mul     di      		;calculate offset of start of row
[1374]    0E28: 57                                    push    di      		;set aside screen width
[1375]    0E29: 8B F9                                 mov     di,cx   		;set aside the column
[1376]    0E2B: 80 E1 07                              and     cl,0111b 	;keep only the column in-byte address
[1377]    0E2E: D1 EF                                 shr     di,1
[1378]    0E30: D1 EF                                 shr     di,1
[1379]    0E32: D1 EF                                 shr     di,1    		;divide column by 8 to make a byte address
[1380]    0E34: 03 F8                                 add     di,ax   		;and point to byte
[1381]        :                                       
[1382]    0E36: BA CE 03                              mov     dx,GC_INDEX
[1383]    0E39: B0 03                                 mov     al,GC_ROTATE
[1384]    0E3B: EE                                    out     dx,al
[1385]    0E3C: 42                                    inc     dx
[1386]    0E3D: EC                                    in      al,dx
[1387]    0E3E: 24 E0                                 and     al,0e0h
[1388]    0E40: 0A C1                                 or      al,cl
[1389]    0E42: EE                                    out     dx,al
[1390]        :                                       ;
[1391]        :                                       ; Set up BH as bit mask for left half, BL as rotation for right half.
[1392]        :                                       ;
[1393]    0E43: BB FF FF                              mov     bx,0ffffh
[1394]    0E46: D2 EF                                 shr     bh,cl
[1395]    0E48: F6 D9                                 neg     cl
[1396]    0E4A: 80 C1 08                              add     cl,8
[1397]    0E4D: D2 E3                                 shl     bl,cl
[1398]        :                                       ;
[1399]        :                                       
[1400]        :                                       ;
[1401]    0E4F: 59                                    pop     cx      		;get back screen width
[1402]    0E50: 56                                    push    si
[1403]    0E51: 57                                    push    di
[1404]    0E52: 53                                    push    bx
[1405]        :                                       ;
[1406]        :                                       ; Set the bit mask for the left half of the character.
[1407]        :                                       ;
[1408]    0E53: BA CE 03                              mov     dx,GC_INDEX
[1409]    0E56: B0 08                                 mov     al,GC_BIT_MASK
[1410]    0E58: 8A E7                                 mov     ah,bh
[1411]    0E5A: EF                                    out     dx,ax
[1412]    0E5B:                                       LeftHalfLoop:
[1413]    0E5B: AC                                    lodsb
[1414]    0E5C: 22 C0                                 and     al,al
[1415]    0E5E: 74 06                                 jz      LeftHalfLoopDone
[1416]    0E60: E8 23 00                              call    CharacterUp
[1417]    0E63: 47                                    inc     di      		;point to next character location
[1418]    0E64: EB F5                                 jmp     LeftHalfLoop
[1419]    0E66:                                       LeftHalfLoopDone:
[1420]    0E66: 5B                                    pop     bx
[1421]    0E67: 5F                                    pop     di
[1422]    0E68: 5E                                    pop     si
[1423]        :                                       ;
[1424]        :                                       ; Draw the right portion of each character in the string.
[1425]        :                                       ;
[1426]    0E69: 47                                    inc     di      		;right portion of each character is across
[1427]        :                                       		; byte boundary
[1428]        :                                       ;
[1429]        :                                       ; Set the bit mask for the right half of the character.
[1430]        :                                       ;
[1431]    0E6A: BA CE 03                              mov     dx,GC_INDEX
[1432]    0E6D: B0 08                                 mov     al,GC_BIT_MASK
[1433]    0E6F: 8A E3                                 mov     ah,bl
[1434]    0E71: EF                                    out     dx,ax
[1435]    0E72:                                       RightHalfLoop:
[1436]    0E72: AC                                    lodsb
[1437]    0E73: 22 C0                                 and     al,al
[1438]    0E75: 74 06                                 jz      RightHalfLoopDone
[1439]    0E77: E8 0C 00                              call    CharacterUp
[1440]    0E7A: 47                                    inc     di      		;point to next character location
[1441]    0E7B: EB F5                                 jmp     RightHalfLoop
[1442]    0E7D:                                       RightHalfLoopDone:
[1443]        :                                       ;
[1444]    0E7D: 1F                                    pop     ds
[1445]    0E7E: 5D                                    pop     bp
[1446]    0E7F: 5F                                    pop     di
[1447]    0E80: 5E                                    pop     si
[1448]    0E81: 5A                                    pop     dx
[1449]    0E82: 59                                    pop     cx
[1450]    0E83: 5B                                    pop     bx
[1451]    0E84: 58                                    pop     ax
[1452]    0E85: C3                                    ret
[1453]        :                                       DrawString      endp
[1454]        :                                       
[1455]    0E86:                                       CharacterUp     proc    near
[1456]    0E86: 51                                    push    cx
[1457]    0E87: 56                                    push    si
[1458]    0E88: 57                                    push    di
[1459]    0E89: 1E                                    push    ds
[1460]        :                                       ;
[1461]        :                                       ; Set DS:SI to point to font and ES to point to display memory.
[1462]        :                                       ;
[1463]    0E8A: C5 36 08 00                           lds     si,[FontPointer]        ;point to font
[1464]        :                                       ;
[1465]        :                                       ; Calculate font address of character.
[1466]        :                                       ;
[1467]    0E8E: B3 0E                                 mov     bl,14   		;14 bytes per character
[1468]    0E90: F6 E3                                 mul     bl
[1469]    0E92: 03 F0                                 add     si,ax   		;offset in font segment of character
[1470]        :                                       
[1471]    0E94: BD 0E 00                              mov     bp,FONT_CHARACTER_SIZE
[1472]    0E97: 49                                    dec     cx      		; -1 because one byte per char
[1473]    0E98:                                       CharacterLoop:
[1474]    0E98: AC                                    lodsb                   	;get character byte
[1475]    0E99: 26 8A 25                              mov     ah,es:[di]      	;load latches
[1476]    0E9C: AA                                    stosb                   	;write character byte
[1477]        :                                       ;
[1478]        :                                       ; Point to next line of character in display memory.
[1479]        :                                       ;
[1480]    0E9D: 03 F9                                 add     di,cx
[1481]        :                                       ;
[1482]    0E9F: 4D                                    dec     bp
[1483]    0EA0: 75 F6                                 jnz     CharacterLoop
[1484]        :                                       ;
[1485]    0EA2: 1F                                    pop     ds
[1486]    0EA3: 5F                                    pop     di
[1487]    0EA4: 5E                                    pop     si
[1488]    0EA5: 59                                    pop     cx
[1489]    0EA6: C3                                    ret
[1490]        :                                       CharacterUp     endp
[1491]        :                                       ;
[1492]        :                                       ; Set the pointer to the font to draw from to ES:BP.
[1493]        :                                       ;
[1494]    0EA7:                                       SelectFont      proc    near
[1495]    0EA7: 89 2E 08 00                           mov     word ptr [FontPointer],bp       ;save pointer
[1496]    0EAB: 8C 06 0A 00                           mov     word ptr [FontPointer+2],es
[1497]    0EAF: C3                                    ret
[1498]        :                                       SelectFont      endp
[1499]        :                                       
[1500]        :                                       ;------------END---text-drawing--------------------------
[1501]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: B0      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 09      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 02      -   SP - stack pointer (h.byte)
0012: C8      -   check sum (l.byte)
0013: 46      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 5F      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 5F      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
